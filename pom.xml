<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2023 elcheapogary
  ~
  ~ This program and the accompanying materials are made
  ~ available under the terms of the Eclipse Public License 2.0
  ~ which is available at https://www.eclipse.org/legal/epl-2.0/
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.elcheapogary.satisplanory</groupId>
    <artifactId>satisplanory</artifactId>
    <version>1.7.2-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <satisplanory.moduleName>io.github.elcheapogary.satisplanory</satisplanory.moduleName>
        <mainClass>io.github.elcheapogary.satisplanory.ui.jfx.app.Main</mainClass>
        <build.jmods.directory>${project.build.directory}/jlink-image/jmods</build.jmods.directory>

        <build.date>${generated.build.date}</build.date>

        <version.commons-io>2.11.0</version.commons-io>
        <version.draw2d>3.2.100-v20070529</version.draw2d>
        <version.json>20220320</version.json>
        <version.openjfx>18.0.1</version.openjfx>
        <version.johnzon>1.2.19</version.johnzon>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${version.commons-io}</version>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.johnzon</groupId>
            <artifactId>johnzon-core</artifactId>
            <version>${version.johnzon}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${version.openjfx}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${version.openjfx}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${version.openjfx}</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>draw2d</artifactId>
            <version>${version.draw2d}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse</groupId>
                    <artifactId>swt</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>create-timestamp</goal>
                        </goals>
                        <configuration>
                            <timestampFormat>yyyy-MM-dd</timestampFormat>
                            <timestampPropertyName>generated.build.date</timestampPropertyName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M6</version>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>${satisplanory.moduleName}/${mainClass}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <outputDirectory>${build.jmods.directory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jlink</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <!--
                                Copy dependencies to jmods directory, which will be used to create jlink image
                            -->
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${build.jmods.directory}</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.moditect</groupId>
                        <artifactId>moditect-maven-plugin</artifactId>
                        <version>1.0.0.Beta2</version>
                        <executions>
                            <!--
                                jlink doesn't like automatic modules, so this execution adds proper module descriptors
                                to dependencies that do not have one.
                            -->
                            <execution>
                                <id>add-module-infos</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>add-module-info</goal>
                                </goals>
                                <configuration>
                                    <overwriteExistingFiles>true</overwriteExistingFiles>
                                    <outputDirectory>${build.jmods.directory}</outputDirectory>
                                    <modules>
                                        <module>
                                            <artifact>
                                                <groupId>commons-io</groupId>
                                                <artifactId>commons-io</artifactId>
                                                <version>${version.commons-io}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                open module org.apache.commons.io {
                                                }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>org.json</groupId>
                                                <artifactId>json</artifactId>
                                                <version>${version.json}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                open module org.json {
                                                }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>org.eclipse</groupId>
                                                <artifactId>draw2d</artifactId>
                                                <version>${version.draw2d}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                open module draw2d {
                                                }
                                            </moduleInfoSource>
                                        </module>
                                        <module>
                                            <artifact>
                                                <groupId>org.apache.johnzon</groupId>
                                                <artifactId>johnzon-core</artifactId>
                                                <version>${version.johnzon}</version>
                                            </artifact>
                                            <moduleInfoSource>
                                                module org.apache.johnzon.core {
                                                    requires java.json;
                                                    provides javax.json.spi.JsonProvider with org.apache.johnzon.core.JsonProviderImpl;
                                                    uses org.apache.johnzon.core.spi.JsonPointerFactory;
                                                }
                                            </moduleInfoSource>
                                        </module>
                                    </modules>
                                </configuration>
                            </execution>

                            <!--
                                this execution creates the runtime image
                            -->
                            <execution>
                                <id>create-runtime-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>create-runtime-image</goal>
                                </goals>
                                <configuration>
                                    <modulePath>
                                        <path>${build.jmods.directory}</path>
                                    </modulePath>
                                    <modules>
                                        <module>${satisplanory.moduleName}</module>
                                        <!--
                                            In Java 17, without jdk.crypto.ec, HTTPS often fails.
                                        -->
                                        <module>jdk.crypto.ec</module>
                                        <module>org.apache.johnzon.core</module>
                                    </modules>
                                    <launcher>
                                        <name>satisplanory</name>
                                        <module>${satisplanory.moduleName}/${mainClass}</module>
                                    </launcher>
                                    <compression>2</compression>
                                    <stripDebug>true</stripDebug>
                                    <outputDirectory>${project.build.directory}/jlink-image/satisplanory-${project.version}</outputDirectory>
                                    <ignoreSigningInformation>true</ignoreSigningInformation>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>linux</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/dist</outputDirectory>
                                    <descriptors>
                                        <descriptor>src/main/assembly/linux.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>windows</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/dist</outputDirectory>
                                    <descriptors>
                                        <descriptor>src/main/assembly/windows.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
